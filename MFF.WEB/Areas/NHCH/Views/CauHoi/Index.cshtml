@{
    Layout = "_Layout";
}
@using MFF.Infrastructure.Models;
@model IEnumerable<CauHoiModel>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-9">
            <input id="keyword" class="form-control" />
        </div>
        <div class="col-md-3">
            <input type="button" class="btn-primary" onclick="runSpeechRecognition()" />
            <input class="btn-sm btn-primary" type="button" onclick="Search()" value="Search" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <span style="height:400px"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 list-group">
            <a href="#" class="list-group-item list-group-item-keyword active">Tiêu đề câu hỏi</a>
            <div class="list-group-item">
                @foreach (var item in Model)
                {
                    <h5 class="list-group-item-heading">
                        <a onclick="OpenView(@item.CauHoiID)">  @item.TenCauHoi</a>
                    </h5>
                    <hr />
                }
            </div>
            <a href="#" class="list-group-item list-group-item-keyword active justify-content-between">Home <span class="badge badge-light badge-pill"> @ViewBag.Count </span></a>
        </div>
        <div class="col-md-9">
            <div id="noidung">

            </div>
        </div>
    </div>
</div>
@section scripts {

    <script type="text/javascript">
        var keyword = document.getElementById("keyword");
        function OpenView(e) {
            $.get('@Url.Action("Details", "CauHoi")', { id: e }, function (rsp) {
                $('#noidung').html(rsp.data.noiDungTraLoi);
            })
        }
        function Search() {
           
            $.get('@Url.Action("Search", "CauHoi")', {keyword:keyword}, function () {

            })
        }
   
        var stop = false;      
        function runSpeechRecognition() {
            //debugger
            if (!stop) {
                $('.button-play').addClass('button-stop');
                stop = stop ? false : true;
                return false;
            }
            $('.button-play').removeClass('button-stop');
            stop = stop ? false : true;
            // get output div reference
            var output = document.getElementById("output");         
         
            // new speech recognition object
            var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
            var recognition = new SpeechRecognition();

            // This runs when the speech recognition service starts
            recognition.onstart = function () {
                $(keyword).attr('placholder', 'Đang nghe, Số hiệu, Tên văn bản, Nội dung cần tìm');
                $('.button-play').removeClass('button-stop');
            };

            recognition.onspeechend = function () {
                $(keyword).attr('placholder', 'Đã hết thời gian chờ');
                $('.button-play').addClass('button-stop');
                recognition.stop();
            }

            // This runs when the speech recognition service returns result
            recognition.onresult = function (event) {
                recognition.lang = 'vi-vn';
                var transcript = event.results[0][0].transcript;
                var confidence = event.results[0][0].confidence;
                $(keyword).attr('value', transcript);               
                Search();
             //   debugger    
            };
            // start recognition
            recognition.start();
        }
    </script>
    }

